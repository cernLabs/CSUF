right_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 1), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 1) / count) * 100, 2), '%'),
left_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 2), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 2) / count) * 100, 2), '%'),
Four_Square_Step_Test = paste0(mean(`4SST (time - s)`, na.rm = TRUE), ' (', sd(`4SST (time - s)`, na.rm = TRUE), ')'),
Handgrip_Strength = paste0(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), ' (', sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), ')')
)
Q2 <- demographics %>%
summarise(
count = n(),
age = paste0(mean(`Age (years old)`, na.rm = TRUE), ' (', sd(`Age (years old)`, na.rm = TRUE), ')'),
male_count = paste0(sum(`Sex (1-male , 2-female)` == 1), '/', round((sum(`Sex (1-male , 2-female)` == 1) / count) * 100, 2), '%'),
female_count = paste0(sum(`Sex (1-male , 2-female)` == 2), '/', round((sum(`Sex (1-male , 2-female)` == 2) / count) * 100, 2), '%'),
right_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 1), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 1) / count) * 100, 2), '%'),
left_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 2), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 2) / count) * 100, 2), '%'),
Four_Square_Step_Test = paste0(mean(`4SST (time - s)`, na.rm = TRUE), ' (', sd(`4SST (time - s)`, na.rm = TRUE), ')'),
Handgrip_Strength = paste0(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), ' (', sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), ')')
)
P_vals = rep(0,6)
Q = t(rbind(Q2,Q1[,2:7],P_vals))
View(Q)
######### Making table
P_vals = rep(0,6)
Q = t(rbind(Q2,Q1[,2:7],P_vals))
View(Q1)
View(Q2)
######### Making table
P_vals = rep(0,7)
Q = t(rbind(Q2,Q1[,2:9],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
######### Making table
P_vals = rep(0,8)
Q = t(rbind(Q2,Q1[,2:9],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
View(Q)
##### rounding the percents to the nearest hundreths
Q1 <- demographics %>%
group_by(`Group ( 1-young, 2-older adults)`) %>%
summarise(
count = n(),
age = paste0(round(mean(`Age (years old)`, na.rm = TRUE), 2), ' (', round(sd(`Age (years old)`, na.rm = TRUE), 2), ')'),
male_count = paste0(sum(`Sex (1-male , 2-female)` == 1), '/', round((sum(`Sex (1-male , 2-female)` == 1) / count) * 100, 2), '%'),
female_count = paste0(sum(`Sex (1-male , 2-female)` == 2), '/', round((sum(`Sex (1-male , 2-female)` == 2) / count) * 100, 2), '%'),
right_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 1), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 1) / count) * 100, 2), '%'),
left_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 2), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 2) / count) * 100, 2), '%'),
Four_Square_Step_Test = paste0(round(mean(`4SST (time - s)`, na.rm = TRUE), 2), ' (', round(sd(`4SST (time - s)`, na.rm = TRUE), 2), ')'),
Handgrip_Strength = paste0(round(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ' (', round(sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ')')
)
Q2 <- demographics %>%
summarise(
count = n(),
age = paste0(round(mean(`Age (years old)`, na.rm = TRUE), 2), ' (', round(sd(`Age (years old)`, na.rm = TRUE), 2), ')'),
male_count = paste0(sum(`Sex (1-male , 2-female)` == 1), '/', round((sum(`Sex (1-male , 2-female)` == 1) / count) * 100, 2), '%'),
female_count = paste0(sum(`Sex (1-male , 2-female)` == 2), '/', round((sum(`Sex (1-male , 2-female)` == 2) / count) * 100, 2), '%'),
right_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 1), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 1) / count) * 100, 2), '%'),
left_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 2), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 2) / count) * 100, 2), '%'),
Four_Square_Step_Test = paste0(round(mean(`4SST (time - s)`, na.rm = TRUE), 2), ' (', round(sd(`4SST (time - s)`, na.rm = TRUE), 2), ')'),
Handgrip_Strength = paste0(round(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ' (', round(sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ')')
)
######### Making table
P_vals = rep(0,8)
Q = t(rbind(Q2,Q1[,2:9],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
View(Q)
library(kableExtra)
kable(Q)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
kable(Q)
kable(Q)
t_test_result <- t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)
# Extract the P-value
p_value <- t_test_result$p.value
p_value
P_vals = c(
'-',
t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,
'-',
'-',
'-',
'-',
t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,
t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,
)
t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value
P_vals = c(
'-',
t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,
'-',
'-',
'-',
'-',
t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,
t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value
)
######### T-Test
Q = t(rbind(Q2,Q1[,2:9],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
library(kableExtra)
kable(Q)
P_vals = c(
'-',
round(t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
'-',
'-',
'-',
'-',
round(t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
round(t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4)
)
# Extract the P-value
p_value <- t_test_result$p.value
######### T-Test
Q = t(rbind(Q2,Q1[,2:9],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
library(kableExtra)
kable(Q)
names(kinematic_data)
sum(`Sex (1-male , 2-female)` == 1,data = demographics)
?chisq.test
XS1_pv <- function(col1,col2,data){
sum(data$col1 == 1) -> s11
sum(data$col1 == 2) -> s12
sum(data$col2 == 1) -> s21
sum(data$col2 == 2) -> s22
M = matrix(c(s11,s12,s21,s22), byrow = TRUE)
return(chisq.test(M)$p.value)
}
round(XS1_pv(`Sex (1-male , 2-female)`,`Age (years old)`,demographics),4)
col1 = `Sex (1-male , 2-female)`
XS1_pv <- function(col1,col2){
sum(col1 == 1) -> s11
sum(col1 == 2) -> s12
sum(col2 == 1) -> s21
sum(col2 == 2) -> s22
M = matrix(c(s11,s12,s21,s22), byrow = TRUE)
return(chisq.test(M)$p.value)
}
XS1_pv(demographics$`Sex (1-male , 2-female)`,demographics$`Age (years old)`)
P_vals = c(
'-',
round(t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
round(XS1_pv(demographics$`Sex (1-male , 2-female)`,demographics$`Age (years old)`),4),
round(XS1_pv(demographics$`Dominant Side (1- right, 2 -left)`,demographics$`Age (years old)`),4),
round(t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
round(t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4)
)
######### T-Test
Q = t(rbind(Q2,Q1[,2:9],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
library(kableExtra)
kable(Q)
#### Summaries Table
Q1 <- demographics %>%
group_by(`Group ( 1-young, 2-older adults)`) %>%
summarise(
count = n(),
age = paste0(round(mean(`Age (years old)`, na.rm = TRUE), 2), ' (', round(sd(`Age (years old)`, na.rm = TRUE), 2), ')'),
female_count = paste0(sum(`Sex (1-male , 2-female)` == 2), '/', round((sum(`Sex (1-male , 2-female)` == 2) / count) * 100, 2), '%'),
left_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 2), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 2) / count) * 100, 2), '%'),
Four_Square_Step_Test = paste0(round(mean(`4SST (time - s)`, na.rm = TRUE), 2), ' (', round(sd(`4SST (time - s)`, na.rm = TRUE), 2), ')'),
Handgrip_Strength = paste0(round(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ' (', round(sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ')')
)
Q2 <- demographics %>%
summarise(
count = n(),
age = paste0(round(mean(`Age (years old)`, na.rm = TRUE), 2), ' (', round(sd(`Age (years old)`, na.rm = TRUE), 2), ')'),
female_count = paste0(sum(`Sex (1-male , 2-female)` == 2), '/', round((sum(`Sex (1-male , 2-female)` == 2) / count) * 100, 2), '%'),
left_dominant = paste0(sum(`Dominant Side (1- right, 2 -left)` == 2), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 2) / count) * 100, 2), '%'),
Four_Square_Step_Test = paste0(round(mean(`4SST (time - s)`, na.rm = TRUE), 2), ' (', round(sd(`4SST (time - s)`, na.rm = TRUE), 2), ')'),
Handgrip_Strength = paste0(round(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ' (', round(sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ')')
)
XS1_pv <- function(col1,col2){
sum(col1 == 1) -> s11
sum(col1 == 2) -> s12
sum(col2 == 1) -> s21
sum(col2 == 2) -> s22
M = matrix(c(s11,s12,s21,s22), byrow = TRUE)
return(chisq.test(M)$p.value)
}
P_vals = c(
'-',
round(t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
round(XS1_pv(demographics$`Sex (1-male , 2-female)`,demographics$`Age (years old)`),4),
round(XS1_pv(demographics$`Dominant Side (1- right, 2 -left)`,demographics$`Age (years old)`),4),
round(t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
round(t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4)
)
######### T-Test
Q = t(rbind(Q2,Q1[,2:7],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
library(kableExtra)
kable(Q)
round()
?round()
P_vals = c(
'-',
signif(t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(XS1_pv(demographics$`Sex (1-male , 2-female)`,demographics$`Age (years old)`),4),
signif(XS1_pv(demographics$`Dominant Side (1- right, 2 -left)`,demographics$`Age (years old)`),4),
signif(t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4)
)
######### T-Test
Q = t(rbind(Q2,Q1[,2:7],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
library(kableExtra)
kable(Q)
QkinL <- kinematic_data %>%
summarise(
count = n(),
`Full Step Length` = paste0(round(mean(Full_Step_Length, na.rm = TRUE), 2), ' (',round(sd(Full_Step_Length, na.rm = TRUE), 2), ')'),
`Step Height` = paste0(round(mean(Step_Height, na.rm = TRUE), 2), ' (',round(sd(Step_Height, na.rm = TRUE), 2), ')'),
`Initiation Time` = paste0(round(mean(Step_Initiation_Time, na.rm = TRUE), 2), ' (',round(sd(Step_Initiation_Time, na.rm = TRUE), 2), ')'),
`Weight Transfer Duration` = paste0(round(mean(Weight_Transfer_Duration, na.rm = TRUE), 2), ' (',round(sd(Weight_Transfer_Duration, na.rm = TRUE), 2), ')'),
`Weight Transfer Onset` = paste0(round(mean(Step_Initiation_Time, na.rm = TRUE), 2), ' (',round(sd(Step_Initiation_Time, na.rm = TRUE), 2), ')'),
`left dominant` = paste0(sum(`Dominant Side (1- right, 2 -left)` == 2), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 2) / count) * 100, 2), '%')
)
names(kinematic_data)
#### Summaries Table
Q1 <- demographics %>%
group_by(`Group ( 1-young, 2-older adults)`) %>%
summarise(
count = n(),
age = paste0(round(mean(`Age (years old)`, na.rm = TRUE), 2), ' (', round(sd(`Age (years old)`, na.rm = TRUE), 2), ')'),
`female count` = paste0(sum(`Sex (1-male , 2-female)` == 2), '/', round((sum(`Sex (1-male , 2-female)` == 2) / count) * 100, 2), '%'),
`left dominant` = paste0(sum(`Dominant Side (1- right, 2 -left)` == 2), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 2) / count) * 100, 2), '%'),
`Four Square Step Test` = paste0(round(mean(`4SST (time - s)`, na.rm = TRUE), 2), ' (', round(sd(`4SST (time - s)`, na.rm = TRUE), 2), ')'),
`Handgrip Strength` = paste0(round(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ' (', round(sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ')')
)
Q2 <- demographics %>%
summarise(
count = n(),
age = paste0(round(mean(`Age (years old)`, na.rm = TRUE), 2), ' (', round(sd(`Age (years old)`, na.rm = TRUE), 2), ')'),
`female count` = paste0(sum(`Sex (1-male , 2-female)` == 2), '/', round((sum(`Sex (1-male , 2-female)` == 2) / count) * 100, 2), '%'),
`left dominant` = paste0(sum(`Dominant Side (1- right, 2 -left)` == 2), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 2) / count) * 100, 2), '%'),
`Four Square Step Test` = paste0(round(mean(`4SST (time - s)`, na.rm = TRUE), 2), ' (', round(sd(`4SST (time - s)`, na.rm = TRUE), 2), ')'),
`Handgrip Strength` = paste0(round(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ' (', round(sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ')')
)
######### Making table
# Extract the P-value
XS1_pv <- function(col1,col2){
sum(col1 == 1) -> s11
sum(col1 == 2) -> s12
sum(col2 == 1) -> s21
sum(col2 == 2) -> s22
M = matrix(c(s11,s12,s21,s22), byrow = TRUE)
return(chisq.test(M)$p.value)
}
P_vals = c(
'-',
signif(t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(XS1_pv(demographics$`Sex (1-male , 2-female)`,demographics$`Age (years old)`),4),
signif(XS1_pv(demographics$`Dominant Side (1- right, 2 -left)`,demographics$`Age (years old)`),4),
signif(t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4)
)
######### T-Test
Q = t(rbind(Q2,Q1[,2:7],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
library(kableExtra)
kable(Q)
XS1_pv <- function(col2,col1){
sum(col1 == 1) -> s11
sum(col1 == 2) -> s12
sum(col2 == 1) -> s21
sum(col2 == 2) -> s22
M = matrix(c(s11,s12,s21,s22), byrow = TRUE)
return(chisq.test(M)$p.value)
}
P_vals = c(
'-',
signif(t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(XS1_pv(demographics$`Sex (1-male , 2-female)`,demographics$`Age (years old)`),4),
signif(XS1_pv(demographics$`Dominant Side (1- right, 2 -left)`,demographics$`Age (years old)`),4),
signif(t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4)
)
######### T-Test
Q = t(rbind(Q2,Q1[,2:7],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
library(kableExtra)
kable(Q)
XS1_pv <- function(col1,col2){
sum(col1 == 1) -> s11
sum(col1 == 2) -> s21
sum(col2 == 1) -> s12
sum(col2 == 2) -> s22
M = matrix(c(s11,s12,s21,s22), byrow = TRUE)
return(chisq.test(M)$p.value)
}
P_vals = c(
'-',
signif(t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(XS1_pv(demographics$`Sex (1-male , 2-female)`,demographics$`Age (years old)`),4),
signif(XS1_pv(demographics$`Dominant Side (1- right, 2 -left)`,demographics$`Age (years old)`),4),
signif(t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4)
)
######### T-Test
Q = t(rbind(Q2,Q1[,2:7],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
library(kableExtra)
kable(Q)
#### Summaries Table
Q1 <- demographics %>%
group_by(`Group ( 1-young, 2-older adults)`) %>%
summarise(
count = n(),
age = paste0(round(mean(`Age (years old)`, na.rm = TRUE), 2), ' (', round(sd(`Age (years old)`, na.rm = TRUE), 2), ')'),
`female count` = paste0(sum(`Sex (1-male , 2-female)` == 2), '/', round((sum(`Sex (1-male , 2-female)` == 2) / count) * 100, 2), '%'),
`Right dominant` = paste0(sum(`Dominant Side (1- right, 2 -left)` == 1), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 1) / count) * 100, 2), '%'),
`Four Square Step Test` = paste0(round(mean(`4SST (time - s)`, na.rm = TRUE), 2), ' (', round(sd(`4SST (time - s)`, na.rm = TRUE), 2), ')'),
`Handgrip Strength` = paste0(round(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ' (', round(sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ')')
)
Q2 <- demographics %>%
summarise(
count = n(),
age = paste0(round(mean(`Age (years old)`, na.rm = TRUE), 2), ' (', round(sd(`Age (years old)`, na.rm = TRUE), 2), ')'),
`female count` = paste0(sum(`Sex (1-male , 2-female)` == 2), '/', round((sum(`Sex (1-male , 2-female)` == 2) / count) * 100, 2), '%'),
`Right dominant` = paste0(sum(`Dominant Side (1- right, 2 -left)` == 1), '/', round((sum(`Dominant Side (1- right, 2 -left)` == 1) / count) * 100, 2), '%'),
`Four Square Step Test` = paste0(round(mean(`4SST (time - s)`, na.rm = TRUE), 2), ' (', round(sd(`4SST (time - s)`, na.rm = TRUE), 2), ')'),
`Handgrip Strength` = paste0(round(mean(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ' (', round(sd(`Handgrip Strenght Test (kg.f)`, na.rm = TRUE), 2), ')')
)
######### Making table
# Extract the P-value
XS1_pv <- function(col1,col2,data){
sum(col1 == 1) -> s11
sum(col1 == 2) -> s21
sum(col2 == 1) -> s12
sum(col2 == 2) -> s22
M = matrix(c(s11,s12,s21,s22), byrow = TRUE)
return(chisq.test(M)$p.value)
}
P_vals = c(
'-',
signif(t.test(`Age (years old)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(chisq.test(matrix(c(2,5,9,4), byrow = TRUE))$p.value,4),
signif(chisq.test(matrix(c(11,7,0,2), byrow = TRUE))$p.value,4),
signif(t.test(`4SST (time - s)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4),
signif(t.test(`Handgrip Strenght Test (kg.f)` ~ `Group ( 1-young, 2-older adults)`, data = demographics)$p.value,4)
)
######### T-Test
Q = t(rbind(Q2,Q1[,2:7],P_vals))
colnames(Q) = c("All Participants","Younger","Older","P-Vals")
library(kableExtra)
kable(Q)
names(kinematic_data)
QkinL <- kinematic_data %>%
summarise(
count = n(),
`Full Step Length` = paste0(round(mean(Full_Step_Length, na.rm = TRUE), 2), ' (',round(sd(Full_Step_Length, na.rm = TRUE), 2), ')'),
`Step Height` = paste0(round(mean(Step_Height, na.rm = TRUE), 2), ' (',round(sd(Step_Height, na.rm = TRUE), 2), ')'),
`Initiation Time` = paste0(round(mean(Step_Initiation_Time, na.rm = TRUE), 2), ' (',round(sd(Step_Initiation_Time, na.rm = TRUE), 2), ')'),
`Weight Transfer Duration` = paste0(round(mean(Weight_Transfer_Duration, na.rm = TRUE), 2), ' (',round(sd(Weight_Transfer_Duration, na.rm = TRUE), 2), ')'),
`Weight Transfer Onset` = paste0(round(mean(Step_Initiation_Time, na.rm = TRUE), 2), ' (',round(sd(Step_Initiation_Time, na.rm = TRUE), 2), ')')
)
QkinR <- kinematic_data %>% group_by(`Age Group (1 Younger; 2 Older)`) %>%
summarise(
count = n(),
`Full Step Length` = paste0(round(mean(Full_Step_Length, na.rm = TRUE), 2), ' (',round(sd(Full_Step_Length, na.rm = TRUE), 2), ')'),
`Step Height` = paste0(round(mean(Step_Height, na.rm = TRUE), 2), ' (',round(sd(Step_Height, na.rm = TRUE), 2), ')'),
`Initiation Time` = paste0(round(mean(Step_Initiation_Time, na.rm = TRUE), 2), ' (',round(sd(Step_Initiation_Time, na.rm = TRUE), 2), ')'),
`Weight Transfer Duration` = paste0(round(mean(Weight_Transfer_Duration, na.rm = TRUE), 2), ' (',round(sd(Weight_Transfer_Duration, na.rm = TRUE), 2), ')'),
`Weight Transfer Onset` = paste0(round(mean(Step_Initiation_Time, na.rm = TRUE), 2), ' (',round(sd(Step_Initiation_Time, na.rm = TRUE), 2), ')')
)
P_valsK = c(
'-',
signif(t.test(Full_Step_Length ~ `Age Group (1 Younger; 2 Older)`, data = demographics)$p.value,4),
signif(t.test(Step_Height ~ `Age Group (1 Younger; 2 Older)`, data = demographics)$p.value,4),
signif(t.test(Step_Initiation_Time ~ `Age Group (1 Younger; 2 Older)`, data = demographics)$p.value,4),
signif(t.test(Weight_Transfer_Duration ~ `Age Group (1 Younger; 2 Older)`, data = demographics)$p.value,4),
signif(t.test(Weight_Transfer_Onset_Initiation_Time ~ `Age Group (1 Younger; 2 Older)`, data = demographics)$p.value,4)
)
P_valsK = c(
'-',
signif(t.test(Full_Step_Length ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4),
signif(t.test(Step_Height ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4),
signif(t.test(Step_Initiation_Time ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4),
signif(t.test(Weight_Transfer_Duration ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4),
signif(t.test(Weight_Transfer_Onset_Initiation_Time ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4)
)
##### Bind Kinematics Summary Table
QK = t(rbind(QkinL,QkinR[,2:6],P_valsK))
P_valsK = c(
'-',
signif(t.test(Full_Step_Length ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4),
signif(t.test(Step_Height ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4),
signif(t.test(Step_Initiation_Time ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4),
signif(t.test(Weight_Transfer_Duration ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4),
signif(t.test(Weight_Transfer_Onset_Initiation_Time ~ `Age Group (1 Younger; 2 Older)`, data = kinematic_data)$p.value,4)
)
##### Bind Kinematics Summary Table
QK = t(rbind(QkinL,QkinR[,2:6],P_valsK))
##### Bind Kinematics Summary Table
QK = t(rbind(QkinL,QkinR,P_valsK))
##### Bind Kinematics Summary Table
QK = t(rbind(QkinL,QkinR[,2:7],P_valsK))
colnames(K) = c("All Participants","Younger","Older","P-Vals")
kable(QK)
colnames(QK) = c("All Participants","Younger","Older","P-Vals")
kable(QK)
Names(muscle_data)
names(muscle_data)
?rowsum
muscle_thickness_all <- muscle_data %>% mutate(`TFL_Thickness(cm)` +
`VL_Thickness(cm)`+
`MG_Thickness(cm)`+
`VI_Thickness(cm)`+
`BF_Thickness(cm)`+
`GM_Thickness(cm)`+
`TA_Thickness(cm)` +  `Sol_Thickness(cm)`)
View(muscle_thickness_all)
View(muscle_thickness_all)
muscle_thickness_all <- muscle_data %>% mutate(`TFL_Thickness(cm)` +
`VL_Thickness(cm)`+
`MG_Thickness(cm)`+
`VI_Thickness(cm)`+
`BF_Thickness(cm)`+
`GM_Thickness(cm)`+
`TA_Thickness(cm)` +  `Sol_Thickness(cm)`)[,-1]
muscle_thickness_all <- muscle_data %>% mutate(`TFL_Thickness(cm)` +
`VL_Thickness(cm)`+
`MG_Thickness(cm)`+
`VI_Thickness(cm)`+
`BF_Thickness(cm)`+
`GM_Thickness(cm)`+
`TA_Thickness(cm)` +  `Sol_Thickness(cm)`)[,-1]
muscle_thickness_all <- muscle_data %>% (`TFL_Thickness(cm)` +
`VL_Thickness(cm)`+
`MG_Thickness(cm)`+
`VI_Thickness(cm)`+
`BF_Thickness(cm)`+
`GM_Thickness(cm)`+
`TA_Thickness(cm)` +  `Sol_Thickness(cm)`)
View(muscle_data)
muscle_thickness_all <- muscle_data %>% mutate(`TFL_Thickness(cm)` +
`VL_Thickness(cm)`+
`MG_Thickness(cm)`+
`VI_Thickness(cm)`+
`BF_Thickness(cm)`+
`GM_Thickness(cm)`+
`TA_Thickness(cm)` +  `Sol_Thickness(cm)`)
View(muscle_thickness_all)
muscle_thickness_all <- muscle_data %>% mutate(thickness_added = `TFL_Thickness(cm)` +
`VL_Thickness(cm)`+
`MG_Thickness(cm)`+
`VI_Thickness(cm)`+
`BF_Thickness(cm)`+
`GM_Thickness(cm)`+
`TA_Thickness(cm)` +  `Sol_Thickness(cm)`)
View(muscle_thickness_all)
muscle_thickness_all$thickness_added
muscle_thickness_all <- muscle_data %>% mutate(thickness_added =
`TFL_Thickness(cm)` +
`VL_Thickness(cm)`+
`MG_Thickness(cm)`+
`VI_Thickness(cm)`+
`BF_Thickness(cm)`+
`GM_Thickness(cm)`+
`TA_Thickness(cm)` +
`Sol_Thickness(cm)`,
quality_added =
`TFL_Quality(au)` +
`VL_Quality(au)` +
`MG_Quality(au)` +
`VI_Quality(au)` +
`BF_Quality(au)` +
`GM_Quality(au)` +
`TA_quality(au)` +
`SOL_quality(au)`,
stiffness_added =
`SWTA(m/s)` +
`SWMG(m/s)` +
`SWVL(m/s)` +
`SWBF(m/s)` +
`SWTFL(m/s)`
)
muscle_thickness_all <- muscle_data %>% mutate(thickness_added =
`TFL_Thickness(cm)` +
`VL_Thickness(cm)`+
`MG_Thickness(cm)`+
`VI_Thickness(cm)`+
`BF_Thickness(cm)`+
`GM_Thickness(cm)`+
`TA_Thickness(cm)` +
`Sol_Thickness(cm)`,
quality_added =
`TFL_Quality(au)` +
`VL_Quality(au)` +
`MG_Quality(au)` +
`VI_Quality(au)` +
`BF_Quality(au)` +
`GM_quality(au)` +
`TA_quality(au)` +
`SOL_quality(au)`,
stiffness_added =
`SWTA(m/s)` +
`SWMG(m/s)` +
`SWVL(m/s)` +
`SWBF(m/s)` +
`SWTFL(m/s)`
)
names(muscle_thickness_all)
ggplot(muscle_thickness_all, aes(x = as.factor(stiffness_added),
fill = as.factor(AgeGroup1Younger2Older))) +
geom_histogram() +
labs(x = "Age Group (1 = Younger, 2 = Older)",
y = "Step Height (m)",
title = "Step Height by Age Group") +
theme_minimal() +
scale_fill_discrete(labels = c("Older","Younger")) + # Custom legend labels
scale_x_discrete(name = "Age Group", labels = c("Young","Older")) +
theme(legend.title = element_blank(), axis.line = element_line(size = 1))
