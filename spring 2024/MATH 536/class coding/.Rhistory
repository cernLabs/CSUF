setwd("~/Desktop/githubbahubba/CSUF/spring 2024/MATH 536/class coding")
## step 1: Fit original model, store original residuals
df <- read.csv('spend_revenue.csv')
?sample()
df[3,2]
df[3,]
df[1:3,]
?lm()
fit <- lm(df$Spend ~ df$Revenue)
BS.x <-  sample(df[2],50,replace = T)
BS.x <-  sample(df[2],500,replace = T)
BS.yhat <- fit(BS.x)
summary(fit)
BS.yhat <- 3.196e+05 + 3.632e-01*BS.x
View(BS.x)
BS.x <- 0
BS.yhat <- 3.196e+05 + 3.632e-01*BS.x
?sample()
BS.x <- sample(df[,2],300,replace = T)
BS.yhat <- 3.196e+05 + 3.632e-01*BS.x
BS.x <- sample(df[,2],500,replace = T)
BS.yhat <- 3.196e+05 + 3.632e-01*BS.x
df = df[-257,]
orig_res <- fit$residuals
n <- length(orig_res)
BS.x <- sample(df[,2],n,replace = T)
BS.yhat <- predict(model,newdata=data.frame(Spend=BS.x))
BS.yhat <- predict(fit,newdata=data.frame(Spend=BS.x))
BS.y <- BS.yhat + sample(orig_res,n,rep = T)
Spend=BS.x
BS.y <- BS.yhat + sample(orig_res,n,rep = T)
BS.y <- BS.yhat + sample(orig_res,n,replace = T)
sample(orig.res,n,replace=T)
BS.y = BS.yhat + sample(orig_res,n,replace=T)
sample(orig_res,n,replace=T)
BS.yhat = predict(fir,newdata=data.frame(Spend=BS.x))
BS.yhat = predict(fit,newdata=data.frame(Spend=BS.x))
df <- read.csv('spend_revenue.csv')
df = df[-257,]
fit <- lm(df$Spend ~ df$Revenue)
orig_res <- fit$residuals
n <- length(orig_res)
BS.x <- sample(df[,2],n,replace = T)
BS.x <- sample(df[,2],n,replace = T)
BS.yhat <- predict(fit,newdata=data.frame(Spend=BS.x))
BS.y <- BS.yhat + sample(orig_res,n,replace = T)
BS_fit <- lm(BS.y~BS.x)
BS.b1 <- BS_fit$coef[2]
BS.yhat.500k <- predict(fit,newdata = (BS.x = 500000))
BS.yhat.500k <- predict(BS_fit, newdata = (BS.x = 500000))
BS.yhat.500k <- predict(BS_fit, newdata = data.frame(BS.x = 500000))
BS.b1 <- rep(0,10000)
BS.yhat.500k <- rep(0,10000)
BS.y.500k <- rep(0,10000)
