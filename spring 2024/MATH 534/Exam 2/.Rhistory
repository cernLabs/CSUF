1-beta-alpha,
mu,
lam))
}
#run problem
data <- as.matrix(read.csv("Problem1_Data.csv", head =T))
EM_alg(1/3,1/3,1,30,data,30)
# making gradient of the llh function
LLgrad <- function(theta,X,EZ){
# take elements
a = theta[1]
b = theta[2]
mu = theta[3]
lam = theta[4]
# input the calculations
dda <- sum(EZ[,1]/a - EZ[,3]/(1-a-b))
ddb <- sum(EZ[,2]/b - EZ[,3]/(1-a-b))
ddmu <- sum(X/mu + EZ[,2] - 1)
ddlam <- sum(X/lam + EZ[,3] - 1)
# output
return(c(dda,ddb,ddmu,ddlam))
}
# expectation calculations
expec <- function(F1,F2,F3,P1,P2,P3){
nu1 = F1 * P1
nu2 = F2 * P2
nu3 = F3 * P3
D = nu1 + nu2 + nu3
E1 = nu1/D
E2 = nu2/D
E3 = nu3/D
EZ = as.matrix(cbind(E1,E2,E3))
return(EZ)
}
#  EM algorithm
EM_alg <- function(alpha,beta,mu,lam,X,maxit){
# define N
N <- length(X)
# make prints
header = paste0("iteration "," alpha     ","    beta      ","    1-beta-alpha","     mu       ","lambda    ","gradnorm")
print(header)
#ITER <-matrix(c(0,0,0,0,0,0,0),nrow = 1,ncol = 7, byrow = T)
# loop part
for(q in 1:maxit){
PI = c(alpha,beta,1-alpha-beta)
# get f1
f1 = rep(0,N)
for(i in 1:N){
if(X[i]==0){f1[i]=1}
}
# get f2 and f3
f2 = dpois(X,lambda = mu)
f3 = dpois(X,lambda = lam)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
#updates
alpha1 <- sum(EZ[,1])/N
beta1 <- sum(EZ[,2])/N
mu1 <- sum(EZ[,2]*X)/sum(EZ[,2])
lam1 <- sum(EZ[,3]*X)/sum(EZ[,3])
theta1 <- c(alpha1,beta1,mu1,lam1)
gradnorm <- norm(LLgrad(theta1,X,EZ),"2")
# print
print(sprintf("%2.0f         | %8.8f | %8.8f | %8.8f | %8.8f | %8.8f | %8.8f",
q,
alpha1,
beta1,
1-alpha1-beta1,
mu1,
lam1,
gradnorm))
#row <- c(q,alpha1,beta1,1-alpha1-beta1,mu1,lam1,gradnorm)
#ITER <- rbind(ITER,row)
# resets
alpha1 -> alpha
beta1 -> beta
mu1 -> mu
lam1 -> lam
}
#print(ITER)
print(sprintf("The MLE's are alpha = %f, beta = %f, 1 - beta - alphha = %f, mu = %f, lambda = %f",
alpha,
beta,
1-beta-alpha,
mu,
lam))
}
#run problem
data <- as.matrix(read.csv("Problem1_Data.csv", head =T))
EM_alg(1/3,1/3,1,30,data,30)
# making gradient of the llh function
LLgrad <- function(theta,X,EZ){
# take elements
a = theta[1]
b = theta[2]
mu = theta[3]
lam = theta[4]
# input the calculations
dda <- sum(EZ[,1]/a - EZ[,3]/(1-a-b))
ddb <- sum(EZ[,2]/b - EZ[,3]/(1-a-b))
ddmu <- sum(X/mu + EZ[,2] - 1)
ddlam <- sum(X/lam + EZ[,3] - 1)
# output
return(c(dda,ddb,ddmu,ddlam))
}
# expectation calculations
expec <- function(F1,F2,F3,P1,P2,P3){
nu1 = F1 * P1
nu2 = F2 * P2
nu3 = F3 * P3
D = nu1 + nu2 + nu3
E1 = nu1/D
E2 = nu2/D
E3 = nu3/D
EZ = as.matrix(cbind(E1,E2,E3))
return(EZ)
}
#  EM algorithm
EM_alg <- function(alpha,beta,mu,lam,X,maxit){
# define N
N <- length(X)
# make prints
header = paste0("iteration "," alpha     ","    beta      ","    1-beta-alpha","     mu       ","   lambda    ","   gradnorm")
print(header)
#ITER <-matrix(c(0,0,0,0,0,0,0),nrow = 1,ncol = 7, byrow = T)
# loop part
for(q in 1:maxit){
PI = c(alpha,beta,1-alpha-beta)
# get f1
f1 = rep(0,N)
for(i in 1:N){
if(X[i]==0){f1[i]=1}
}
# get f2 and f3
f2 = dpois(X,lambda = mu)
f3 = dpois(X,lambda = lam)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
#updates
alpha1 <- sum(EZ[,1])/N
beta1 <- sum(EZ[,2])/N
mu1 <- sum(EZ[,2]*X)/sum(EZ[,2])
lam1 <- sum(EZ[,3]*X)/sum(EZ[,3])
theta1 <- c(alpha1,beta1,mu1,lam1)
gradnorm <- norm(LLgrad(theta1,X,EZ),"2")
# print
print(sprintf("%2.0f         | %8.8f | %8.8f | %8.8f | %8.8f | %8.8f | %8.8f",
q,
alpha1,
beta1,
1-alpha1-beta1,
mu1,
lam1,
gradnorm))
#row <- c(q,alpha1,beta1,1-alpha1-beta1,mu1,lam1,gradnorm)
#ITER <- rbind(ITER,row)
# resets
alpha1 -> alpha
beta1 -> beta
mu1 -> mu
lam1 -> lam
}
#print(ITER)
print(sprintf("The MLE's are alpha = %f, beta = %f, 1 - beta - alphha = %f, mu = %f, lambda = %f",
alpha,
beta,
1-beta-alpha,
mu,
lam))
}
#run problem
data <- as.matrix(read.csv("Problem1_Data.csv", head =T))
EM_alg(1/3,1/3,1,30,data,30)
source("~/.active-rstudio-document", echo=TRUE)
f1 <- 0
f2 <- dpois(9,lambda = 4.965980)
f3 <- dpois(9,lambda = 15.063997)
b <- 0.305566
g <- 0.111064
EZ2 <- f2*b/(f2*b + f3*g)
EZ3 <- f3*g/(f2*b + f3*g)
EZ2;EZ3
MC2(.2,.6,10000,338)
``
P <- 1 3 4 5
p <- c(1,3,4,6)
(P - mean(P))^2
(p - mean(p))^2
matrix(0,4,4)
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> H
return(H)
}
for(q in 1:maxit){
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 = rep(0,N)
for(i in 1:N){
if(X[i]==0){f1[i]=1}
}
# get f2 and f3
f2 = dpois(X,lambda = mu)
f3 = dpois(X,lambda = lam)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
# get Infomat
H <- INFOMAT(0.583370,0.305566,4.965980,15.063997,EZ,data)
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> H
return(H)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 = rep(0,N)
for(i in 1:N){
if(X[i]==0){f1[i]=1}
}
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> H
return(H)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(X,lambda = mu)
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> H
return(H)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(X,lambda = 4.965980)
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> H
return(H)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(data,lambda = 4.965980)
f3 = dpois(data,lambda = 15.063997)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
# get Infomat
H <- INFOMAT(0.583370,0.305566,4.965980,15.063997,EZ,data)
View(H)
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> H
I = solve(-H)
return(I)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(data,lambda = 4.965980)
f3 = dpois(data,lambda = 15.063997)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
# get Infomat
I <- INFOMAT(0.583370,0.305566,4.965980,15.063997,EZ,data)
# get diagnaols
diag(I)
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> H
I = solve(-H)
return(I)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(data,lambda = 4.965980)
f3 = dpois(data,lambda = 15.063997)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
# get Infomat
I <- INFOMAT(0.583370,0.305566,4.965980,15.063997,EZ,data)
# get diagnaols
diag(I) -> Vs
length(data) -> N
# these are the standard errors
print(sqrt(Vs/N))
View(I)
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(-1/h)*H -> I
return(I)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(data,lambda = 4.965980)
f3 = dpois(data,lambda = 15.063997)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
# get Infomat
I <- INFOMAT(0.583370,0.305566,4.965980,15.063997,EZ,data)
# get diagnaols
1/diag(I) -> Vs
length(data) -> N
# these are the standard errors
print(sqrt(Vs/N))
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(-1/h)*H -> I
return(I)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(data,lambda = 4.965980)
f3 = dpois(data,lambda = 15.063997)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
# get Infomat
I <- INFOMAT(0.583370,0.305566,4.965980,15.063997,EZ,data)
# get diagnaols
1/diag(I) -> Vs
length(data) -> N
# these are the standard errors
Vs
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> I
return(I)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(data,lambda = 4.965980)
f3 = dpois(data,lambda = 15.063997)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
# get Infomat
I <- INFOMAT(0.583370,0.305566,4.965980,15.063997,EZ,data)
# get diagnaols
1/diag(I) -> Vs
length(data) -> N
# these are the standard errors
Vs
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> I
return(I)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(data,lambda = 4.965980)
f3 = dpois(data,lambda = 15.063997)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
# get Infomat
I <- INFOMAT(0.583370,0.305566,4.965980,15.063997,EZ,data)
# get diagnaols
1/diag(I) -> Vs
length(data) -> N
# these are the standard errors
print(sqrt(Vs/N))
sprintf("standard error for alpha is %1.6e",TSE[1])
# these are the standard errors
TSE <- sqrt(Vs/N)
sprintf("standard error for alpha is %1.6e",TSE[1])
INFOMAT <- function(a,b,M,L,EZ,X){
h <- 10^(-7)
# form matrix
H <- matrix(0,4,4)
#element wise
H[1,1] = sum(EZ[,1]/(a*h) - EZ[,3]/(1 - a*h - b)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,2] = sum(EZ[,2]/(b*h) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,2]/(a) - EZ[,3]/(1 - a - b))
H[3,3] = sum(X/(M*h)+EZ[,2]-1) - sum(X/(M)+EZ[,2]-1)
H[4,4] = sum(X/(L*h)+EZ[,3]-1) - sum(X/(L)+EZ[,3]-1)
H[1,2] = sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b*h)) - sum(EZ[,1]/(a) - EZ[,3]/(1 - a - b))
H[2,1] <- H[1,2]
(1/h)*H -> I
return(I)
}
PI = c(0.583370,0.305566,0.111064)
# get f1
f1 <- as.numeric(data == 0)
# get f2 and f3
f2 = dpois(data,lambda = 4.965980)
f3 = dpois(data,lambda = 15.063997)
# run expectation update
expec(f1,f2,f3,PI[1],PI[2],PI[3]) -> EZ
# get Infomat
I <- INFOMAT(0.583370,0.305566,4.965980,15.063997,EZ,data)
# get diagnaols
1/diag(I) -> Vs
length(data) -> N
# these are the standard errors
TSE <- sqrt(Vs/N)
sprintf("standard error for alpha is %1.6e, for beta is %1.6e, for mu is %1.6e, for lambda is %1.6e",
TSE[1],
TSE[2],
TSE[3],
TSE[4])
