---
title: "Random Forest Guided Project"
format: pdf
editor: visual
---

## Discussion

\newpage

## Code

```{r}
adult <- read.csv("adult.data")
# name the columns
names(adult) <- c("age",
                 "workclass",
                 "fnlwgt",
                 "education",
                 "education.num",
                 "marital.status",
                 "occupation",
                 "relationship",
                 "race",
                 "sex",
                 "capital.gain",
                 "capital.loss",
                 "hours.per.week",
                 "native.country",
                 "y")
# make change the high column to a boolean
adult$y <- factor(ifelse(adult$y== " >50K", "yes", "no"))
```

Let's eradicate the " ?"'s

```{r}
any(sapply(adult, function(x) any(x == " ?")))
which(sapply(adult, function(x) any(x == " ?")))


adult <- adult[!adult$workclass == " ?",]
adult <- adult[!adult$occupation == " ?",]
adult <- adult[!adult$native.country== " ?",]
```

Make a 70/30 split

```{r}
 k = sample(1:30161, size = 9048, rep =F)
 adult.train <- adult[-k,]
 adult.test <- adult[k,]
```

use the randomforest function

```{r}
# fit a random forest
library(randomForest)
fit.rf <- randomForest(y ~ ., data = adult.train, ntree = 100, mtry = 4, nodesize = 10)
# confusionmatrix for the random forest
library(caret)
adult.test$rf0_yhat = predict(fit.rf, newdata = adult.test, type = "response")
cmat_0 <- confusionMatrix(adult.test$rf0_yhat, adult.test$y)
```

Given that I have 14 features, I am going to make the mtry = 4. We will start with 100 trees to save RAM.

I like to make a function to display all the accuracy metrics.

```{r}
# display for accuracy, precision, recall, f1score
table1 <- function(confusion_matrix,model_name){
  confusion_matrix -> tab
  tab[1,1] -> tn
  tab[2,2] -> tp
  tab[1,2] -> fp
  tab[2,1] -> fn
  a = (tp+tn)/(tp+tn+fp+fn)
  p = tp/(tp+fp)
  r = tp/(tp+fn)
  sprintf("%s || Accuracy: %f | Precision: %f | Recall(TPR): %f",model_name,a,p,r)
}

table1(cmat_0$table,"initial randForest")
```

```{r}
# variables importance test is here
library(vip)
vi(fit.rf) -> X
barplot(X$Importance,names.arg = X$Variable, horiz = F,las = 2, cex.names = 0.8)
```
