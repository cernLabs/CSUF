hist(B,breaks = 100, freq = F)
B = rep(0,5000)
for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B[i] = sample(size = 1, beta_sampl,replace = F, prob = p_sampl)
}
yi = c(1.8,1.7,1.4,1.6,1.9,1.5,1.2)
LLH <- function(a, y = yi){
n = length(y)
f = n*log(2^a/gamma(a)) + (a - 1)*log(prod(y)) - 2*sum(y)
return(f)
}
alpha <- seq(0,10,length = 1000)
plot(alpha,LLH(alpha),type = 'l')
alpha <- seq(3.60,3.70,length = 1000)
plot(alpha,LLH(alpha),type = "l")
abline(v=3.625,col = "red")
0.8/6^7*prod(yi^3) -> c1
0.8+sum(yi^3) -> c2
c1;c2
# plotting the posterior
post <- function(beta){
# numerator
numer <- function(x){
0.03681441 * x^28 * exp(-30.347*x)
}
# denominator
denom <- integrate(numer, lower = 0, upper = Inf)$value
# output
return(numer(beta)/denom)
}
# render
beta <- seq(0,10,length = 1000)
plot(beta,post(beta),type = "l")
# make vector between 2 and 3
beta1 <- seq(.5,1.5,length = 500000)
beta1[which(post(beta1) == max(post(beta1)))] -> MLE_beta
MLE_beta
B = rep(0,5000)
for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B[i] = sample(size = 1, beta_sampl,replace = F, prob = p_sampl)
}
hist(B,breaks = 100, freq = F)
hist(B,breaks = 100, freq = F)
hist(B,breaks = 100, freq = F)
lines(B,post(B),color = "forestgreen", lwd = 2)
hist(B,breaks = 100, freq = F)
lines(B,post(B),col = "forestgreen", lwd = 2)
hist(B,breaks = 100, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
B = rep(0,5000)
for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B[i] = sample(size = 1, beta_sampl,replace = F, prob = p_sampl)
}
B = rep(0,5000)
for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(500,0,2)
# get p_values
p_sampl = post(beta_sampl)
B[i] = sample(size = 1, beta_sampl,replace = F, prob = p_sampl)
}
hist(B,breaks = 100, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
B = rep(0,5000)
for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(5000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B[i] = sample(size = 1, beta_sampl,replace = F, prob = p_sampl)
}
hist(B,breaks = 100, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
# make vector between 2 and 3
beta1 <- seq(.5,1.5,length = 500000)
beta1[which(post(beta1) == max(post(beta1)))] -> MLE_beta
MLE_beta
B = rep(0,5000)
for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(5000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B[i] = sample(size = 1, beta_sampl,replace = T, prob = p_sampl)
}
hist(B,breaks = 100, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
B = rep(0,5000)
#for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B[i] = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
#}
B = rep(0,5000)
#for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
#}
hist(B,breaks = 100, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
hist(B,breaks = 200, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
#for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,10)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
#}
hist(B,breaks = 200, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
#for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,3)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
#}
hist(B,breaks = 200, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
#for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,3)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
#}
hist(B,breaks = 200, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
#for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,3)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
#}
hist(B,breaks = 200, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
#for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
#}
hist(B,breaks = 200, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
#for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
#}
hist(B,breaks = 200, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
#for(i in 1:5000){
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
#}
hist(B,breaks = 80, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = F, prob = p_sampl)
hist(B,breaks = 80, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
# render some values of beta from 0 to 2
beta_sampl = runif(10000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = F, prob = p_sampl)
hist(B,breaks = 80, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
# render some values of beta from 0 to 2
beta_sampl = runif(100000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
hist(B,breaks = 80, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
# render some values of beta from 0 to 2
beta_sampl = runif(1000000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
hist(B,breaks = 80, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
# render some values of beta from 0 to 2
beta_sampl = runif(10000000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
hist(B,breaks = 80, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
# render some values of beta from 0 to 2
beta_sampl = runif(1000000,0,2)
# get p_values
p_sampl = post(beta_sampl)
B = sample(size = 5000, beta_sampl,replace = T, prob = p_sampl)
hist(B,breaks = 80, freq = F)
lines(beta,post(beta),col = "forestgreen", lwd = 2)
mean(B)
for(v in c(0.025,.5,.975)){
print(quantile(B,v))
}
post(.92)
post(.9)
