var(beta.post[-c(1:burn)])
# Bioassay
J = 4
n = c(5,5,5,5)
y = c(0, 1, 3, 5)
x = c(-0.86, -0.30, -0.05, 0.73)
# Y_i|theta_i ~ Bin(n_i, theta_i); logit(theta_i) = alpha + beta*x_i
# p(alpha, beta) = 1
Prior = function(alpha, beta){
dmvnorm(x = c(alpha,beta), mean = c(0,10), sigma = matrix(c(4,0.5,0.5,100),2,2))
}
Likelihood = function(Y, N, X, alpha, beta){
th = inv.logit(alpha + beta*X)
prod(dbinom(Y, N, th))
}
rProposal = function(n, alpha, beta, s, S){
rmvnorm(1, mean = c(alpha, beta), sigma = s*S)
}
### initialize
accept = 0
s = 1 # tuning param.
S = matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
# S = matrix(c(1, 2.3, 2.3, 18), nrow = 2, ncol = 2)
###
temp = y/n # "MLE's of thetas"
temp = c(0.01, 0.2, 0.6, 0.9) # fixing the boundries
summary(lm(logit(temp) ~ x)) # est. are reasonable est. for alpha and beta
alpha.post = beta.post = numeric()
alpha.post[1] = 0.1
beta.post[1] = 2.9
B = 1000
for(b in 2:(B+1)){
#Joint MH step: alpha, beta|data
ab.star = rProposal(1, alpha.post[(b-1)], beta.post[(b-1)], s, S)
r = (Likelihood(y, n, x, ab.star[1], ab.star[2])) /
(Likelihood(y, n, x, alpha.post[(b-1)], beta.post[(b-1)]) *
Prior(alpha.post[(b-1)], beta.post[(b-1)]))
# Accept/Reject
if(runif(1) < min(1, r)){
alpha.post[b] = ab.star[1]
beta.post[b] = ab.star[2]
accept = accept + 1
}else{
alpha.post[b] = alpha.post[(b-1)]
beta.post[b] = beta.post[(b-1)]
}
}
plot(alpha.post, type = "l")
plot(beta.post, type = "l")
burn = 500
acf(alpha.post[-c(1:burn)])
acf(beta.post[-c(1:burn)])
var(alpha.post[-c(1:burn)])
cov(alpha.post[-c(1:burn)], beta.post[-c(1:burn)])
var(beta.post[-c(1:burn)])
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()
# Bioassay
J = 4
n = c(5,5,5,5)
y = c(0, 1, 3, 5)
x = c(-0.86, -0.30, -0.05, 0.73)
# Y_i|theta_i ~ Bin(n_i, theta_i); logit(theta_i) = alpha + beta*x_i
# p(alpha, beta) = 1
Prior = function(alpha, beta){
dmvnorm(x = c(alpha,beta), mean = c(0,10), sigma = matrix(c(4,0.5,0.5,100),2,2))
}
Likelihood = function(Y, N, X, alpha, beta){
th = inv.logit(alpha + beta*X)
prod(dbinom(Y, N, th))
}
rProposal = function(n, alpha, beta, s, S){
rmvnorm(1, mean = c(alpha, beta), sigma = s*S)
}
### initialize
accept = 0
s = 1 # tuning param.
S = matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
# S = matrix(c(1, 2.3, 2.3, 18), nrow = 2, ncol = 2)
###
temp = y/n # "MLE's of thetas"
temp = c(0.01, 0.2, 0.6, 0.9) # fixing the boundries
summary(lm(logit(temp) ~ x)) # est. are reasonable est. for alpha and beta
alpha.post = beta.post = numeric()
alpha.post[1] = 0.1
beta.post[1] = 2.9
B = 1000
for(b in 2:(B+1)){
#Joint MH step: alpha, beta|data
ab.star = rProposal(1, alpha.post[(b-1)], beta.post[(b-1)], s, S)
r = (Likelihood(y, n, x, ab.star[1], ab.star[2])) /
(Likelihood(y, n, x, alpha.post[(b-1)], beta.post[(b-1)]) *
Prior(alpha.post[(b-1)], beta.post[(b-1)]))
# Accept/Reject
if(runif(1) < min(1, r)){
alpha.post[b] = ab.star[1]
beta.post[b] = ab.star[2]
accept = accept + 1
}else{
alpha.post[b] = alpha.post[(b-1)]
beta.post[b] = beta.post[(b-1)]
}
}
# plot(alpha.post, type = "l")
# plot(beta.post, type = "l")
# burn = 500
# acf(alpha.post[-c(1:burn)])
# acf(beta.post[-c(1:burn)])
#
# var(alpha.post[-c(1:burn)])
# cov(alpha.post[-c(1:burn)], beta.post[-c(1:burn)])
# var(beta.post[-c(1:burn)])
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()
ifit = summary(lm(logit(temp) ~ x)) # est. are reasonable est. for alpha and beta
coef(ifit[1])
coef(ifit)
coef(ifit)[1]
coef(ifit)[2]
# Bioassay
J = 4
n = c(5,5,5,5)
y = c(0, 1, 3, 5)
x = c(-0.86, -0.30, -0.05, 0.73)
# Y_i|theta_i ~ Bin(n_i, theta_i); logit(theta_i) = alpha + beta*x_i
# p(alpha, beta) = 1
Prior = function(alpha, beta){
dmvnorm(x = c(alpha,beta), mean = c(0,10), sigma = matrix(c(4,0.5,0.5,100),2,2))
}
Likelihood = function(Y, N, X, alpha, beta){
th = inv.logit(alpha + beta*X)
prod(dbinom(Y, N, th))
}
rProposal = function(n, alpha, beta, s, S){
rmvnorm(1, mean = c(alpha, beta), sigma = s*S)
}
### initialize
accept = 0
s = 1 # tuning param.
S = matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
# S = matrix(c(1, 2.3, 2.3, 18), nrow = 2, ncol = 2)
###
temp = y/n # "MLE's of thetas"
temp = c(0.01, 0.2, 0.6, 0.9) # fixing the boundries
ifit = summary(lm(logit(temp) ~ x)) # est. are reasonable est. for alpha and beta
alpha.post = beta.post = numeric()
alpha.post[1] = -0.3356453
beta.post[1] = 4.2419651
B = 1000
for(b in 2:(B+1)){
#Joint MH step: alpha, beta|data
ab.star = rProposal(1, alpha.post[(b-1)], beta.post[(b-1)], s, S)
r = (Likelihood(y, n, x, ab.star[1], ab.star[2])) /
(Likelihood(y, n, x, alpha.post[(b-1)], beta.post[(b-1)]) *
Prior(alpha.post[(b-1)], beta.post[(b-1)]))
# Accept/Reject
if(runif(1) < min(1, r)){
alpha.post[b] = ab.star[1]
beta.post[b] = ab.star[2]
accept = accept + 1
}else{
alpha.post[b] = alpha.post[(b-1)]
beta.post[b] = beta.post[(b-1)]
}
}
# plot(alpha.post, type = "l")
# plot(beta.post, type = "l")
# burn = 500
# acf(alpha.post[-c(1:burn)])
# acf(beta.post[-c(1:burn)])
#
# var(alpha.post[-c(1:burn)])
# cov(alpha.post[-c(1:burn)], beta.post[-c(1:burn)])
# var(beta.post[-c(1:burn)])
# Bioassay
J = 4
n = c(5,5,5,5)
y = c(0, 1, 3, 5)
x = c(-0.86, -0.30, -0.05, 0.73)
# Y_i|theta_i ~ Bin(n_i, theta_i); logit(theta_i) = alpha + beta*x_i
# p(alpha, beta) = 1
Prior = function(alpha, beta){
dmvnorm(x = c(alpha,beta), mean = c(0,10), sigma = matrix(c(4,10,10,100),2,2))
}
Likelihood = function(Y, N, X, alpha, beta){
th = inv.logit(alpha + beta*X)
prod(dbinom(Y, N, th))
}
rProposal = function(n, alpha, beta, s, S){
rmvnorm(1, mean = c(alpha, beta), sigma = s*S)
}
### initialize
accept = 0
s = 1 # tuning param.
S = matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
# S = matrix(c(1, 2.3, 2.3, 18), nrow = 2, ncol = 2)
###
temp = y/n # "MLE's of thetas"
temp = c(0.01, 0.2, 0.6, 0.9) # fixing the boundries
ifit = summary(lm(logit(temp) ~ x)) # est. are reasonable est. for alpha and beta
alpha.post = beta.post = numeric()
alpha.post[1] = -0.3356453
beta.post[1] = 4.2419651
B = 1000
for(b in 2:(B+1)){
#Joint MH step: alpha, beta|data
ab.star = rProposal(1, alpha.post[(b-1)], beta.post[(b-1)], s, S)
r = (Likelihood(y, n, x, ab.star[1], ab.star[2])) /
(Likelihood(y, n, x, alpha.post[(b-1)], beta.post[(b-1)]) *
Prior(alpha.post[(b-1)], beta.post[(b-1)]))
# Accept/Reject
if(runif(1) < min(1, r)){
alpha.post[b] = ab.star[1]
beta.post[b] = ab.star[2]
accept = accept + 1
}else{
alpha.post[b] = alpha.post[(b-1)]
beta.post[b] = beta.post[(b-1)]
}
}
# plot(alpha.post, type = "l")
# plot(beta.post, type = "l")
# burn = 500
# acf(alpha.post[-c(1:burn)])
# acf(beta.post[-c(1:burn)])
#
# var(alpha.post[-c(1:burn)])
# cov(alpha.post[-c(1:burn)], beta.post[-c(1:burn)])
# var(beta.post[-c(1:burn)])
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()
ifit
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density_2d_filled(aes(fill = ..level..)) + scale_fill_viridis_c(option = "plasma")
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density_2d_filled(aes(fill = level)) + scale_fill_viridis_c(option = "plasma")
# Bioassay
J = 4
n = c(5,5,5,5)
y = c(0, 1, 3, 5)
x = c(-0.86, -0.30, -0.05, 0.73)
# Y_i|theta_i ~ Bin(n_i, theta_i); logit(theta_i) = alpha + beta*x_i
# p(alpha, beta) = 1
Prior = function(alpha, beta){
dmvnorm(x = c(alpha,beta), mean = c(0,10), sigma = matrix(c(4,10,10,100),2,2))
}
Likelihood = function(Y, N, X, alpha, beta){
th = inv.logit(alpha + beta*X)
prod(dbinom(Y, N, th))
}
rProposal = function(n, alpha, beta, s, S){
rmvnorm(1, mean = c(alpha, beta), sigma = s*S)
}
### initialize
accept = 0
s = 1 # tuning param.
S = matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
# S = matrix(c(1, 2.3, 2.3, 18), nrow = 2, ncol = 2)
###
temp = y/n # "MLE's of thetas"
temp = c(0.01, 0.2, 0.6, 0.9) # fixing the boundries
ifit = summary(lm(logit(temp) ~ x)) # est. are reasonable est. for alpha and beta
alpha.post = beta.post = numeric()
alpha.post[1] = -0.3356453
beta.post[1] = 4.2419651
B = 20000
for(b in 2:(B+1)){
#Joint MH step: alpha, beta|data
ab.star = rProposal(1, alpha.post[(b-1)], beta.post[(b-1)], s, S)
r = (Likelihood(y, n, x, ab.star[1], ab.star[2])) /
(Likelihood(y, n, x, alpha.post[(b-1)], beta.post[(b-1)]) *
Prior(alpha.post[(b-1)], beta.post[(b-1)]))
# Accept/Reject
if(runif(1) < min(1, r)){
alpha.post[b] = ab.star[1]
beta.post[b] = ab.star[2]
accept = accept + 1
}else{
alpha.post[b] = alpha.post[(b-1)]
beta.post[b] = beta.post[(b-1)]
}
}
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
# Bioassay
J = 4
n = c(5,5,5,5)
y = c(0, 1, 3, 5)
x = c(-0.86, -0.30, -0.05, 0.73)
# Y_i|theta_i ~ Bin(n_i, theta_i); logit(theta_i) = alpha + beta*x_i
# p(alpha, beta) = 1
Prior = function(alpha, beta){
dmvnorm(x = c(alpha,beta), mean = c(0,10), sigma = matrix(c(4,10,10,100),2,2))
}
Likelihood = function(Y, N, X, alpha, beta){
th = inv.logit(alpha + beta*X)
prod(dbinom(Y, N, th))
}
rProposal = function(n, alpha, beta, s, S){
rmvnorm(1, mean = c(alpha, beta), sigma = s*S)
}
### initialize
accept = 0
s = 1 # tuning param.
S = matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
# S = matrix(c(1, 2.3, 2.3, 18), nrow = 2, ncol = 2)
###
temp = y/n # "MLE's of thetas"
temp = c(0.01, 0.2, 0.6, 0.9) # fixing the boundries
ifit = summary(lm(logit(temp) ~ x)) # est. are reasonable est. for alpha and beta
alpha.post = beta.post = numeric()
alpha.post[1] = -0.3356453
beta.post[1] = 4.2419651
B = 10000
for(b in 2:(B+1)){
#Joint MH step: alpha, beta|data
ab.star = rProposal(1, alpha.post[(b-1)], beta.post[(b-1)], s, S)
r = (Likelihood(y, n, x, ab.star[1], ab.star[2])) /
(Likelihood(y, n, x, alpha.post[(b-1)], beta.post[(b-1)]) *
Prior(alpha.post[(b-1)], beta.post[(b-1)]))
# Accept/Reject
if(runif(1) < min(1, r)){
alpha.post[b] = ab.star[1]
beta.post[b] = ab.star[2]
accept = accept + 1
}else{
alpha.post[b] = alpha.post[(b-1)]
beta.post[b] = beta.post[(b-1)]
}
}
# Bioassay
J = 4
n = c(5,5,5,5)
y = c(0, 1, 3, 5)
x = c(-0.86, -0.30, -0.05, 0.73)
# Y_i|theta_i ~ Bin(n_i, theta_i); logit(theta_i) = alpha + beta*x_i
# p(alpha, beta) = 1
Prior = function(alpha, beta){
dmvnorm(x = c(alpha,beta), mean = c(0,10), sigma = matrix(c(4,10,10,100),2,2))
}
Likelihood = function(Y, N, X, alpha, beta){
th = inv.logit(alpha + beta*X)
prod(dbinom(Y, N, th))
}
rProposal = function(n, alpha, beta, s, S){
rmvnorm(1, mean = c(alpha, beta), sigma = s*S)
}
### initialize
accept = 0
s = 1 # tuning param.
S = matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
# S = matrix(c(1, 2.3, 2.3, 18), nrow = 2, ncol = 2)
###
temp = y/n # "MLE's of thetas"
temp = c(0.01, 0.2, 0.6, 0.9) # fixing the boundries
ifit = summary(lm(logit(temp) ~ x)) # est. are reasonable est. for alpha and beta
alpha.post = beta.post = numeric()
alpha.post[1] = -0.3356453
beta.post[1] = 4.2419651
B = 8000
for(b in 2:(B+1)){
#Joint MH step: alpha, beta|data
ab.star = rProposal(1, alpha.post[(b-1)], beta.post[(b-1)], s, S)
r = (Likelihood(y, n, x, ab.star[1], ab.star[2])) /
(Likelihood(y, n, x, alpha.post[(b-1)], beta.post[(b-1)]) *
Prior(alpha.post[(b-1)], beta.post[(b-1)]))
# Accept/Reject
if(runif(1) < min(1, r)){
alpha.post[b] = ab.star[1]
beta.post[b] = ab.star[2]
accept = accept + 1
}else{
alpha.post[b] = alpha.post[(b-1)]
beta.post[b] = beta.post[(b-1)]
}
}
# plot(alpha.post, type = "l")
# plot(beta.post, type = "l")
# burn = 500
# acf(alpha.post[-c(1:burn)])
# acf(beta.post[-c(1:burn)])
#
# var(alpha.post[-c(1:burn)])
# cov(alpha.post[-c(1:burn)], beta.post[-c(1:burn)])
# var(beta.post[-c(1:burn)])
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()
matrix(c(4,10,10,100),2,2)
# Bioassay
J = 4
n = c(5,5,5,5)
y = c(0, 1, 3, 5)
x = c(-0.86, -0.30, -0.05, 0.73)
# Y_i|theta_i ~ Bin(n_i, theta_i); logit(theta_i) = alpha + beta*x_i
# p(alpha, beta) = 1
Prior = function(alpha, beta){
dmvnorm(x = c(alpha,beta), mean = c(0,10), sigma = matrix(c(4,10,10,100),2,2))
}
Likelihood = function(Y, N, X, alpha, beta){
th = inv.logit(alpha + beta*X)
prod(dbinom(Y, N, th))
}
rProposal = function(n, alpha, beta, s, S){
rmvnorm(1, mean = c(alpha, beta), sigma = s*S)
}
### initialize
accept = 0
s = 1 # tuning param.
S = matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
# S = matrix(c(1, 2.3, 2.3, 18), nrow = 2, ncol = 2)
###
temp = y/n # "MLE's of thetas"
temp = c(0.01, 0.2, 0.6, 0.9) # fixing the boundries
ifit = summary(lm(logit(temp) ~ x)) # est. are reasonable est. for alpha and beta
alpha.post = beta.post = numeric()
alpha.post[1] = -0.3356453
beta.post[1] = 4.2419651
B = 8000
for(b in 2:(B+1)){
#Joint MH step: alpha, beta|data
ab.star = rProposal(1, alpha.post[(b-1)], beta.post[(b-1)], s, S)
# Ratio of Densities
r.num = Likelihood(y, n, x, ab.star[1], ab.star[2]) *
Prior(ab.star[1], ab.star[2])
r.den = Likelihood(y, n, x, alpha.post[(b - 1)], beta.post[(b - 1)]) *
Prior(alpha.post[(b - 1)], beta.post[(b - 1)])
r = r.num / r.den
# Accept/Reject
if(runif(1) < min(1, r)){
alpha.post[b] = ab.star[1]
beta.post[b] = ab.star[2]
accept = accept + 1
}else{
alpha.post[b] = alpha.post[(b-1)]
beta.post[b] = beta.post[(b-1)]
}
}
# plot(alpha.post, type = "l")
# plot(beta.post, type = "l")
# burn = 500
# acf(alpha.post[-c(1:burn)])
# acf(beta.post[-c(1:burn)])
#
# var(alpha.post[-c(1:burn)])
# cov(alpha.post[-c(1:burn)], beta.post[-c(1:burn)])
# var(beta.post[-c(1:burn)])
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()
# contour and dots
par(mfrow = c(1,2))
# contour and dots
par(mfrow = c(1,2))
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()
# contour and dots
par(mfrow = c(1,2))
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
par(mfrow = c(1,2))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d()
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d() +ylim(-10,40) +xlim(-4,10)
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()+ylim(-10,40) +xlim(-4,10)
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d() +ylim(-10,40) +xlim(-4,10) +coord_fixed(ratio = 1)
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()+ylim(-10,40) +xlim(-4,10)+coord_fixed(ratio = 1)
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d() +ylim(-10,40) +xlim(-4,10) +coord_fixed(ratio = 50/15)
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()+ylim(-10,40) +xlim(-4,10)+coord_fixed(ratio = 50/15)
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d() +ylim(-10,40) +xlim(-4,10) +coord_fixed(ratio = 15/50)
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()+ylim(-10,40) +xlim(-4,10)+coord_fixed(ratio = 15/50)
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d() +ylim(-10,40) +xlim(-4,10) +coord_fixed(ratio = 15/50) +geom_point(position = position_jitter(width = 0.2, height = 0.2), color = "red", alpha = 0.6)
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()+ylim(-10,40) +xlim(-4,10)+coord_fixed(ratio = 15/50) +geom_point(position = position_jitter(width = 0.2, height = 0.2), color = "red", alpha = 0.6)
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d() +ylim(-10,40) +xlim(-4,10) +coord_fixed(ratio = 15/50) +
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()+ylim(-10,40) +xlim(-4,10)+coord_fixed(ratio = 15/50)
# contour and dots
post <- data.frame(cbind(alpha.post,beta.post))
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_density2d() +ylim(-10,40) +xlim(-4,10) +coord_fixed(ratio = 15/50)
ggplot(post, aes(x = alpha.post, y =beta.post)) + geom_point()+ylim(-10,40) +xlim(-4,10)+coord_fixed(ratio = 15/50)
