data <- read.csv("Population-1.csv", header = T)
plot.ts(data)
head(data)
?read.csv()
plot.ts(data$pop)
?decompose
series <- data$pop
plot.ts(series)
m <- decompose(series)
series <- ts(data$pop, frequency = 12)
plot.ts(series)
m <- decompose(series)
m$figure
plot(m)
acf(series)
ar1 <-arima.sim(list(order = c(1,0,0),ar = 0.9), n= 100)
plot(ar1, type="l")
acf(ar1)
ar2 <-arima.sim(list(order = c(2,0,0),ar = c(0.4,-0.4)), n= 100)
plot(ar2, type="l")
acf(ar2)
library(forecast)
x = numeric()
x[1] = 0
for(j in 2:101){
x[j] = 1.5*x[(j-1)] + rnorm(1)
}
plot(x, type= "l")
acf(x)
#arima will give an error if estimates imply nonstationarity under causal model
auto.arima(x, stationary = TRUE, allowmean = TRUE) #try stationary true
arima(x, order = c(1,0,0), include.mean = FALSE) #Exam 2
arma1 <-arima.sim(list(order = c(2,0,1),ar = c(0.2, -.4), ma= 0.5), n= 100)
plot(arma1)
auto.arima(arma1, stationary = TRUE, allowmean = FALSE, allowdrift = FALSE)
arima(arma1, order = c(2,0,1), include.mean = FALSE)
m <- 1
ar2 <- arima.sim(model = list(order= c(2,0,0),ar = c(0.8, 0.1)), n = 500) + m
plot(ar2, type="l")
?arima
ar2.mod <- arima(ar2, order= c(2,0,0))
acf(ar2.mod$residuals)
m <- 1
ar2ma1 <- arima.sim(model = list(order= c(2,0,1), ar = c(0.8, 0.1), ma = 0.3), n = 500) + m
plot(ar2ma1, type="l")
?arima
ar2ma1.mod <- arima(ar2ma1, order= c(2,0,1))
ar2ma1.mod
acf(ar2ma1.mod$residuals)
m <- 1
ar2 <- arima.sim(model = list(order= c(2,0,0),ar = c(0.8, 0.1)), n = 500) + m
plot(ar2, type="l")
?arima
ar2.mod <- arima(ar2, order= c(2,0,0))
acf(ar2.mod$residuals)
acf(series)
acf(series)
m <- decompose(series)
m$figure
plot(m)
plot(m)[1]
plot(m)$observed
m$figure
plot(m)
arma1 <-arima.sim(list(order = c(1,0,1),ar =.9, ma= 0.5), n= 100)
plot(arma1)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1),ar =.9, ma= 0.5), n= 80)
plot(arma1)
auto.arima(arma1, stationary = TRUE, allowmean = FALSE, allowdrift = FALSE)
arima(arma1, order = c(2,0,1), include.mean = FALSE)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1)), n= 80)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1), ar =1), n= 80)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1), ar =c(1,1)), n= 80)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1), ar =c(1,1)), n= 80)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1), ar =c.9), n= 80)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1), ar =.9), n= 80)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1), ar =.9, ma = 1), n= 80)
plot(arma1)
auto.arima(arma1, stationary = FALSE, allowmean = FALSE, allowdrift = FALSE)
arima(arma1, order = c(2,0,1), include.mean = FALSE)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1), ar =.9, ma = 2), n= 80)
plot(arma1)
auto.arima(arma1, stationary = FALSE, allowmean = FALSE, allowdrift = FALSE)
arima(arma1, order = c(2,0,1), include.mean = FALSE)
# arma1
arma1 <-arima.sim(list(order = c(1,0,1), ar =.9, ma = 0), n= 80)
plot(arma1)
auto.arima(arma1, stationary = FALSE, allowmean = FALSE, allowdrift = FALSE)
arima(arma1, order = c(2,0,1), include.mean = FALSE)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("Population-1.csv", header = T)
series <- ts(data$pop, start = c(2010,1), frequency = 12)
m <- decompose(series)
m$figure
plot(m)
m <- decompose(series, type = "additive")
m$figure
plot(m)
plot(m$trend)
acf(m)
m <- decompose(series, type = "additive")
m$figure
plot(m$trend)
plot(m$seasonal)
plot(m$random)
acf(m$random)
acf(na.omit(m$random))
# arma1
arma1 <-arima(series,order = c(1.0,1))
# arma1
arma1 <-arima(series,order = c(1,0,1))
?diff
# arma1
arma1 <-arima(diff(series,diff = 1),order = c(1,0,1))
arma1
# differencing
seriesD <- diff(series,diff = 1)
# arma1
arma1 <-arima(seriesD,order = c(1,0,1))
arma1
# differencing
seriesD <- diff(series,diff = 1)
# ARMA1
arma1 <-arima(seriesD,order = c(1,0,1))
arma1
# ARMA2
arma2 <-arima(seriesD,order = c(2,0,0))
arma2
# ARMA3
arma3 <-arima(seriesD,order = c(0,0,2))
arma3
# ARMA4
arma4 <-arima(seriesD,order = c(2,0,1))
arma4
# ARMA5
arma5 <-arima(seriesD,order = c(2,0,2))
arma5
install.packages("kableExtra")
arma1$coef
fr <- data.frame(
"ARMA(1,0,1)" = c(0.5532,'-',0.7496,'-',3.0659,276.84),
"ARMA(2,0,0)" = c(1.1672,-0.4911,'-','-',3.0132,277.95),
"ARMA(0,0,2)" = c('-','-',1.2078,0.3528,2.9268,282.45),
"ARMA(2,0,1)" = c(0.4946,0.0775,0.7824,'-',3.0980,278.62),
"ARMA(2,0,2)" = c(0.1878,0.2658,1.0796,0.2205,3.1055,280.31))
View(fr)
fr <- data.frame(
Model = c("ARMA(1,0,1)","ARMA(2,0,0)","ARMA(0,0,2)","ARMA(2,0,1)","ARMA(2,0,2)"),
ar1 = c(0.5532,1.1672,'-',0.4946,0.1878),
ar2 = c('-',-0.4911,'-',0.0775,0.2658),
ma1 = c(0.7496,'-',1.2078,0.7824,1.0796),
ma2 = c('-','-',0.3528,'-',0.2205),
intercept = c(3.0659,3.0132,2.9268,3.0980,3.1055),
AIC = c(276.84,277.95,282.45,278.62,280.31))
View(fr)
# render table
tab <- table(fr)
# render table
tab <- kable(fr)
library(kableExtra)
kab <- kable(fr)
library(dplyr)
kab <- kab %>%
kable_styling(full_width = TRUE, font_size = 10) %>%
row_spec(1, bold = TRUE)
kab
# render table
fr
ender table
kab <- kable(fr)
kab
kab <- kable(fr, format = "html") %>%
kable_classic()
kab
# render table
kable(fr)
# Make table
fr <- data.frame(
Model = c("ARMA(1,0,1)","ARMA(2,0,0)","ARMA(0,0,2)","ARMA(2,0,1)","ARMA(2,0,2)"),
ar1 = c(0.5532,1.1672,'-',0.4946,0.1878),
ar2 = c('-',-0.4911,'-',0.0775,0.2658),
ma1 = c(0.7496,'-',1.2078,0.7824,1.0796),
ma2 = c('-','-',0.3528,'-',0.2205),
intercept = c(3.0659,3.0132,2.9268,3.0980,3.1055),
AIC = c(276.84,277.95,282.45,278.62,280.31))
# render table
kable(fr,caption = "Parameter Estimates and AIC for ARMA models")
# render table
library(kable)
# Make table
fr <- data.frame(
Model = c("ARMA(1,0,1)","ARMA(2,0,0)","ARMA(0,0,2)","ARMA(2,0,1)","ARMA(2,0,2)"),
ar1 = c(0.5532,1.1672,'-',0.4946,0.1878),
ar2 = c('-',-0.4911,'-',0.0775,0.2658),
ma1 = c(0.7496,'-',1.2078,0.7824,1.0796),
ma2 = c('-','-',0.3528,'-',0.2205),
intercept = c(3.0659,3.0132,2.9268,3.0980,3.1055),
AIC = c(276.84,277.95,282.45,278.62,280.31))
# render table
library(kableExtra)
kable(fr,caption = "Parameter Estimates and AIC for ARMA models")
acf(na.omit(m$random), title = "Autocorrelation Function")
acf(na.omit(m$random), main = "Autocorrelation Function")
m <- decompose(series, type = "additive")
m$figure
plot(m$trend, main = "General Trend for Rotifer Population")
plot(m$seasonal, main = "Seasonal Trend for Rotifer Population")
plot(m$random, main = "Residuals for Rotifer Population TS Data")
m <- decompose(series, type = "additive")
m$figure
plot(m$trend, main = "General Trend for Rotifer Population")
plot(m$seasonal, main = "Seasonal Trend for Rotifer Population")
plot(m$random,
xlab = "residuals",
main = "Residuals for Rotifer Population TS Data")
m <- decompose(series, type = "additive")
m$figure
plot(m$trend, main = "General Trend for Rotifer Population")
plot(m$seasonal, main = "Seasonal Trend for Rotifer Population")
plot(m$random,
ylab = "residuals",
main = "Residuals for Rotifer Population TS Data")
plot.ts(series, ylab = "popluation", main = "Rotifer Population Over Time")
